//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity dropChessStateEntity { get { return GetGroup(GameMatcher.DropChessState).GetSingleEntity(); } }
    public DropChessStateComponent dropChessState { get { return dropChessStateEntity.dropChessState; } }
    public bool hasDropChessState { get { return dropChessStateEntity != null; } }

    public GameEntity SetDropChessState(int newRound) {
        if (hasDropChessState) {
            throw new Entitas.EntitasException("Could not set DropChessState!\n" + this + " already has an entity with DropChessStateComponent!",
                "You should check if the context already has a dropChessStateEntity before setting it or use context.ReplaceDropChessState().");
        }
        var entity = CreateEntity();
        entity.AddDropChessState(newRound);
        return entity;
    }

    public void ReplaceDropChessState(int newRound) {
        var entity = dropChessStateEntity;
        if (entity == null) {
            entity = SetDropChessState(newRound);
        } else {
            entity.ReplaceDropChessState(newRound);
        }
    }

    public void RemoveDropChessState() {
        dropChessStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DropChessStateComponent dropChessState { get { return (DropChessStateComponent)GetComponent(GameComponentsLookup.DropChessState); } }
    public bool hasDropChessState { get { return HasComponent(GameComponentsLookup.DropChessState); } }

    public void AddDropChessState(int newRound) {
        var index = GameComponentsLookup.DropChessState;
        var component = CreateComponent<DropChessStateComponent>(index);
        component.round = newRound;
        AddComponent(index, component);
    }

    public void ReplaceDropChessState(int newRound) {
        var index = GameComponentsLookup.DropChessState;
        var component = CreateComponent<DropChessStateComponent>(index);
        component.round = newRound;
        ReplaceComponent(index, component);
    }

    public void RemoveDropChessState() {
        RemoveComponent(GameComponentsLookup.DropChessState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDropChessState;

    public static Entitas.IMatcher<GameEntity> DropChessState {
        get {
            if (_matcherDropChessState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DropChessState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDropChessState = matcher;
            }

            return _matcherDropChessState;
        }
    }
}
