//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CoordinateComponent coordinate { get { return (CoordinateComponent)GetComponent(GameComponentsLookup.Coordinate); } }
    public bool hasCoordinate { get { return HasComponent(GameComponentsLookup.Coordinate); } }

    public void AddCoordinate(int newRound, int newPos) {
        var index = GameComponentsLookup.Coordinate;
        var component = CreateComponent<CoordinateComponent>(index);
        component.round = newRound;
        component.pos = newPos;
        AddComponent(index, component);
    }

    public void ReplaceCoordinate(int newRound, int newPos) {
        var index = GameComponentsLookup.Coordinate;
        var component = CreateComponent<CoordinateComponent>(index);
        component.round = newRound;
        component.pos = newPos;
        ReplaceComponent(index, component);
    }

    public void RemoveCoordinate() {
        RemoveComponent(GameComponentsLookup.Coordinate);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCoordinate;

    public static Entitas.IMatcher<GameEntity> Coordinate {
        get {
            if (_matcherCoordinate == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Coordinate);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCoordinate = matcher;
            }

            return _matcherCoordinate;
        }
    }
}
