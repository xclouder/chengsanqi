//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LayChessPieceComponent layChessPiece { get { return (LayChessPieceComponent)GetComponent(GameComponentsLookup.LayChessPiece); } }
    public bool hasLayChessPiece { get { return HasComponent(GameComponentsLookup.LayChessPiece); } }

    public void AddLayChessPiece(ChessPieceComponent newChessPiece) {
        var index = GameComponentsLookup.LayChessPiece;
        var component = CreateComponent<LayChessPieceComponent>(index);
        component.chessPiece = newChessPiece;
        AddComponent(index, component);
    }

    public void ReplaceLayChessPiece(ChessPieceComponent newChessPiece) {
        var index = GameComponentsLookup.LayChessPiece;
        var component = CreateComponent<LayChessPieceComponent>(index);
        component.chessPiece = newChessPiece;
        ReplaceComponent(index, component);
    }

    public void RemoveLayChessPiece() {
        RemoveComponent(GameComponentsLookup.LayChessPiece);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLayChessPiece;

    public static Entitas.IMatcher<GameEntity> LayChessPiece {
        get {
            if (_matcherLayChessPiece == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LayChessPiece);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLayChessPiece = matcher;
            }

            return _matcherLayChessPiece;
        }
    }
}
