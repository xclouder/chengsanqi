//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ChessPieceComponent chessPiece { get { return (ChessPieceComponent)GetComponent(GameComponentsLookup.ChessPiece); } }
    public bool hasChessPiece { get { return HasComponent(GameComponentsLookup.ChessPiece); } }

    public void AddChessPiece(bool newIsWhite) {
        var index = GameComponentsLookup.ChessPiece;
        var component = CreateComponent<ChessPieceComponent>(index);
        component.isWhite = newIsWhite;
        AddComponent(index, component);
    }

    public void ReplaceChessPiece(bool newIsWhite) {
        var index = GameComponentsLookup.ChessPiece;
        var component = CreateComponent<ChessPieceComponent>(index);
        component.isWhite = newIsWhite;
        ReplaceComponent(index, component);
    }

    public void RemoveChessPiece() {
        RemoveComponent(GameComponentsLookup.ChessPiece);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChessPiece;

    public static Entitas.IMatcher<GameEntity> ChessPiece {
        get {
            if (_matcherChessPiece == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChessPiece);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChessPiece = matcher;
            }

            return _matcherChessPiece;
        }
    }
}
