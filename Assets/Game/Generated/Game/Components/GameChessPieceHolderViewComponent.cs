//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ChessPieceHolderViewComponent chessPieceHolderView { get { return (ChessPieceHolderViewComponent)GetComponent(GameComponentsLookup.ChessPieceHolderView); } }
    public bool hasChessPieceHolderView { get { return HasComponent(GameComponentsLookup.ChessPieceHolderView); } }

    public void AddChessPieceHolderView(UnityEngine.GameObject newGameObject) {
        var index = GameComponentsLookup.ChessPieceHolderView;
        var component = CreateComponent<ChessPieceHolderViewComponent>(index);
        component.gameObject = newGameObject;
        AddComponent(index, component);
    }

    public void ReplaceChessPieceHolderView(UnityEngine.GameObject newGameObject) {
        var index = GameComponentsLookup.ChessPieceHolderView;
        var component = CreateComponent<ChessPieceHolderViewComponent>(index);
        component.gameObject = newGameObject;
        ReplaceComponent(index, component);
    }

    public void RemoveChessPieceHolderView() {
        RemoveComponent(GameComponentsLookup.ChessPieceHolderView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChessPieceHolderView;

    public static Entitas.IMatcher<GameEntity> ChessPieceHolderView {
        get {
            if (_matcherChessPieceHolderView == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChessPieceHolderView);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChessPieceHolderView = matcher;
            }

            return _matcherChessPieceHolderView;
        }
    }
}
