//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity actionStateEntity { get { return GetGroup(GameMatcher.ActionState).GetSingleEntity(); } }
    public ActionStateComponent actionState { get { return actionStateEntity.actionState; } }
    public bool hasActionState { get { return actionStateEntity != null; } }

    public GameEntity SetActionState(ActionState newActionState) {
        if (hasActionState) {
            throw new Entitas.EntitasException("Could not set ActionState!\n" + this + " already has an entity with ActionStateComponent!",
                "You should check if the context already has a actionStateEntity before setting it or use context.ReplaceActionState().");
        }
        var entity = CreateEntity();
        entity.AddActionState(newActionState);
        return entity;
    }

    public void ReplaceActionState(ActionState newActionState) {
        var entity = actionStateEntity;
        if (entity == null) {
            entity = SetActionState(newActionState);
        } else {
            entity.ReplaceActionState(newActionState);
        }
    }

    public void RemoveActionState() {
        actionStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ActionStateComponent actionState { get { return (ActionStateComponent)GetComponent(GameComponentsLookup.ActionState); } }
    public bool hasActionState { get { return HasComponent(GameComponentsLookup.ActionState); } }

    public void AddActionState(ActionState newActionState) {
        var index = GameComponentsLookup.ActionState;
        var component = CreateComponent<ActionStateComponent>(index);
        component.actionState = newActionState;
        AddComponent(index, component);
    }

    public void ReplaceActionState(ActionState newActionState) {
        var index = GameComponentsLookup.ActionState;
        var component = CreateComponent<ActionStateComponent>(index);
        component.actionState = newActionState;
        ReplaceComponent(index, component);
    }

    public void RemoveActionState() {
        RemoveComponent(GameComponentsLookup.ActionState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActionState;

    public static Entitas.IMatcher<GameEntity> ActionState {
        get {
            if (_matcherActionState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActionState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActionState = matcher;
            }

            return _matcherActionState;
        }
    }
}
